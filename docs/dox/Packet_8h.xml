<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="Packet_8h">
    <title>Packet.h File Reference</title>
    <programlisting>#include &quot;stdafx.h&quot;</programlisting>
    <programlisting>#include &lt;ntddk.h&gt;</programlisting>
    <programlisting>#include &lt;ndis.h&gt;</programlisting>
    <programlisting>#include &lt;wmistr.h&gt;</programlisting>
    <programlisting>#include &lt;wdmsec.h&gt;</programlisting>
    <programlisting>#include &lt;wdmguid.h&gt;</programlisting>
    <programlisting>#include &quot;C:/Users/nmap/Source/Repos/npcap/packetWin7/npf/npf/debug.h&quot;</programlisting>
    <programlisting>#include &quot;C:/Users/nmap/Source/Repos/npcap/packetWin7/npf/npf/macros.h&quot;</programlisting>
    <programlisting>#include &lt;ntstrsafe.h&gt;</programlisting>
    <programlisting>#include &quot;win_bpf.h&quot;</programlisting>
    <programlisting>#include &quot;C:/Users/nmap/Source/Repos/npcap/packetWin7/npf/npf/time_calls.h&quot;</programlisting>
        <section>
            <title> Data Structures </title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="structpacket__file__header">packet_file_header</link></para>
<para><emphasis>Header of a libpcap dump file.</emphasis></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="structsf__pkthdr">sf_pkthdr</link></para>
<para><emphasis>Header associated to a packet in the driver&apos;s buffer when the driver is in dump mode.
Similar to the bpf_hdr structure, but simpler.</emphasis></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="struct__PACKET__OID__DATA">_PACKET_OID_DATA</link></para>
<para><emphasis>Structure containing an OID request.</emphasis></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="struct__INTERNAL__REQUEST">_INTERNAL_REQUEST</link></para>
<para><emphasis>Stores an OID request.</emphasis></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="struct__PACKET__RESERVED">_PACKET_RESERVED</link></para>
<para><emphasis>Contains a NDIS packet.</emphasis></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="struct__DEVICE__EXTENSION">_DEVICE_EXTENSION</link></para>
<para><emphasis>Port device extension.</emphasis></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="struct____CPU__Private__Data">__CPU_Private_Data</link></para>
<para><emphasis>Kernel buffer of each CPU.</emphasis></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="struct__OPEN__INSTANCE">_OPEN_INSTANCE</link></para>
<para><emphasis>Contains the state of a running instance of the NPF driver.</emphasis></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="structPacketHeader">PacketHeader</link></para>
<para><emphasis>Structure prepended to each packet in the kernel buffer pool.</emphasis></para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title>Macros</title>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="group__NPF__include_1ga654dd84e604275a3a81caf8aa15bdf4a">__PACKET_INCLUDE______</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="group__NPF__include_1gaab9817adcf9533112501a00ef9111587">FILTER_ACQUIRE_LOCK</link> NdisAcquireSpinLock(_pLock)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="group__NPF__include_1ga40e501a8f6f65d052419e384e7b92a4f">FILTER_RELEASE_LOCK</link> NdisReleaseSpinLock(_pLock)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="group__NPF__include_1ga8fc96cee4177a369a99de7026ebeba81">MAX_REQUESTS</link> 128<para><emphasis>Maximum number of simultaneous IOCTL requests.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="group__NPF__include_1ga8463d2101446f74b83ed10006d772384">Packet_ALIGNMENT</link> sizeof(int)<para><emphasis>Alignment macro. Defines the alignment size.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="group__NPF__include_1ga6ad53095b69ed77878dc683754e3264a">Packet_WORDALIGN</link> (((x)+(<link linkend="group__NPF__include_1ga8463d2101446f74b83ed10006d772384">Packet_ALIGNMENT</link>-1))&amp;~(<link linkend="group__NPF__include_1ga8463d2101446f74b83ed10006d772384">Packet_ALIGNMENT</link>-1))<para><emphasis>even multiple of Packet_ALIGNMENT.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="group__NPF__include_1gac93c0a6ad1d2a3143b1115bdab3ac04d">MODE_CAPT</link> 0x0<para><emphasis>Capture working mode.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="group__NPF__include_1ga503326906a62e96c147ae6af31fb5659">MODE_STAT</link> 0x1<para><emphasis>Statistical working mode.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="group__NPF__include_1ga528e7e542cb1a028a10a3a318880dffb">MODE_MON</link> 0x2<para><emphasis>Kernel monitoring mode.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="group__NPF__include_1ga89853f93dc8cc890b0665629d16d2831">MODE_DUMP</link> 0x10<para><emphasis>Kernel dump working mode.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="group__NPF__include_1ga4f6749b7708a411df2a3341a3fcef917">IMMEDIATE</link> 1<para><emphasis>Immediate timeout. Forces a read call to return immediately.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="group__NPF__include_1ga0a110077bb4fcbcc75512d8988c90de8">NDIS_FLAGS_SKIP_LOOPBACK_W2K</link> 0x400<para><emphasis>This is an undocumented flag for NdisSetPacketFlags() that allows to disable loopback reception.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="group__NPF__include_1gafedcc0aa0cf5abe7b20c68eefdfcb126">TCPDUMP_MAGIC</link> 0xa1b2c3d4<para><emphasis>Libpcap magic number. Used by programs like tcpdump to recognize a driver&apos;s generated dump file.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="group__NPF__include_1gaac031371d41e21ff96e80409e05a7ddb">PCAP_VERSION_MAJOR</link> 2<para><emphasis>Major libpcap version of the dump file. Used by programs like tcpdump to recognize a driver&apos;s generated dump file.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="group__NPF__include_1ga9c200b070c9f626d38184588b16849c2">PCAP_VERSION_MINOR</link> 4<para><emphasis>Minor libpcap version of the dump file. Used by programs like tcpdump to recognize a driver&apos;s generated dump file.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="group__NPF__include_1ga7ccc8974741059b5ae25231a56dbed09">NPF_DISABLE_LOOPBACK</link> 1<para><emphasis>Tells the driver to drop the packets sent by itself. This is usefult when building applications like bridges.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="group__NPF__include_1ga4a60d1f215d5b2af2b3b86a0f2a90ae2">NPF_ENABLE_LOOPBACK</link> 2<para><emphasis>Tells the driver to capture the packets sent by itself.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="group__NPF__include_1gaf61e6e31a7d39674d62d73f748772fce">NPF_LOOPBACK_INTERFACR_MTU</link> 65536<para><emphasis>The MTU of the &quot;Npcap Loopback Adapter&quot;, this value adopts Linux&apos;s &quot;lo&quot; MTU and can&apos;t be modified.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="group__NPF__include_1ga2d888c8008db794522a3b13ed65068f7">NdisMediumNull</link> -1<para><emphasis>The link type of the &quot;Npcap Loopback Adapter&quot;, this value will be recognized by packet.dll code.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="group__NPF__include_1ga1b13e6e753db6b0e48a7179cde1be439">NdisMediumCHDLC</link> -2<para><emphasis>Custom linktype: NDIS doesn&apos;t provide an equivalent.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="group__NPF__include_1gae8d4f86eb49aa7bb65794b680327a865">NdisMediumPPPSerial</link> -3<para><emphasis>Custom linktype: NDIS doesn&apos;t provide an equivalent.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="group__NPF__include_1ga5a3d28ed9a0f3379dbce8e3f4ecfcc0e">NdisMediumBare80211</link> -4<para><emphasis>The link type of the Native WiFi adapters, Npcap versions with Native WiFi feature enabled will support this value.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="group__NPF__include_1gae0fb7abf1fd38b8e1f3049bd75abdfcf">NdisMediumRadio80211</link> -5<para><emphasis>Custom linktype: NDIS doesn&apos;t provide an equivalent.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="group__NPF__include_1gad3c9d011684e435e817f946a5b65be1d">NdisMediumPpi</link> -6<para><emphasis>Custom linktype: NDIS doesn&apos;t provide an equivalent.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="group__NPF__include_1ga8b9fc965a4bc299f98645d648611db66">NPF_MAX_CPU_NUMBER</link> sizeof(KAFFINITY) * 32</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="group__NPF__include_1gaaf9bf39b6ecc2537a21d0ffa54707e48">ADAPTER_NAME_SIZE</link> (sizeof(&quot;\\Device\\{754FC84C-EFBC-4443-B479-2EFAE01DC7BF}&quot;) - 1)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="group__NPF__include_1gaa5b6ca49796c0867a90829d35b61f44e">FILTER_UNIQUE_NAME</link> L&quot;{7daf2ac8-e9f6-4765-a842-f1f5d2501341}&quot;</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="group__NPF__include_1ga9f24b75aca9c59c38d6af55ff1a39e40">FILTER_UNIQUE_NAME_WIFI</link> L&quot;{7daf2ac8-e9f6-4765-a842-f1f5d2501351}&quot;</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="group__NPF__include_1ga74667b1380dd052f08d72c2f5a8d9235">SECOND_LAST_HEX_INDEX_OF_FILTER_UNIQUE_NAME</link> (<link linkend="group__NPF__include_1gaaf9bf39b6ecc2537a21d0ffa54707e48">ADAPTER_NAME_SIZE</link> - (sizeof(&quot;\\Device\\&quot;) - 1) + 1 + (sizeof(<link linkend="group__NPF__include_1gaa5b6ca49796c0867a90829d35b61f44e">FILTER_UNIQUE_NAME</link>) - 2) / sizeof(WCHAR) - 3)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="group__NPF__include_1gadfb173c8c762b05c8f96b3168426d4dd">ADAPTER_NAME_SIZE_WITH_SEPARATOR</link> (<link linkend="group__NPF__include_1gaaf9bf39b6ecc2537a21d0ffa54707e48">ADAPTER_NAME_SIZE</link> + 1)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="group__NPF__include_1ga258cb90ee5e695c41390f63677e2abf1">NPF_MAX_BUFFER_SIZE</link> 0x40000000L</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="group__NPF__include_1ga7300b6880da1b61717e7ff815d579bf6">C_ASSERT</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="group__NPF__include_1ga048ba8dfabc6ac16c602a1ca6fe994fc">RESERVED</link> ((<link linkend="group__NPF__include_1ga375d9973bbbe748c9722e8f546beb10c">PPACKET_RESERVED</link>)((_p)-&gt;ProtocolReserved))<para><emphasis>Macro to obtain a NDIS_PACKET from a PACKET_RESERVED.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="group__NPF__include_1ga652e6173ee1441712652d74a5533e042">TRANSMIT_PACKETS</link> 256<para><emphasis>of packets that can be transmitted at the same time or with a single call to NdisSendPackets.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="group__NPF__include_1gacabf25322566f3bcd1e564e4939f5821">EXIT_SUCCESS</link> Irp-&gt;IoStatus.Information=quantity;\
	Irp-&gt;IoStatus.Status = STATUS_SUCCESS;\
	IoCompleteRequest(Irp, IO_NO_INCREMENT);\
	return STATUS_SUCCESS;\<para><emphasis>Macro used in the I/O routines to return the control to user-mode with a success status.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="group__NPF__include_1gad6d1f5522a147ddeb7d9b11916acd50a">EXIT_FAILURE</link> Irp-&gt;IoStatus.Information=quantity;\
	Irp-&gt;IoStatus.Status = STATUS_UNSUCCESSFUL;\
	IoCompleteRequest(Irp, IO_NO_INCREMENT);\
	return STATUS_UNSUCCESSFUL;\<para><emphasis>Macro used in the I/O routines to return the control to user-mode with a failure status.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title>Enumerations</title>
            <para>
                <itemizedlist>
                    <listitem>
                            <para><literallayout>enum <link linkend="group__NPF__include_1gaa80226df1c5ee18b01580d23ed4f31cb">ADAPTER_BINDING_STATUS</link> {
<link linkend="group__NPF__include_1ggaa80226df1c5ee18b01580d23ed4f31cba6e4cdf9f09abf447cffdfd5058357822">ADAPTER_UNBOUND</link>,
<link linkend="group__NPF__include_1ggaa80226df1c5ee18b01580d23ed4f31cba3e0c0f314d2e9dc41c205ab44bf087bc">ADAPTER_BOUND</link>,
<link linkend="group__NPF__include_1ggaa80226df1c5ee18b01580d23ed4f31cbadc92e852ef35fac0f033487a3be66a93">ADAPTER_UNBINDING</link>
}</literallayout>
</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title>Typedefs</title>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>typedef struct _NDIS_OID_REQUEST *  <link linkend="group__NPF__include_1ga993e68e9e1b59f07d2e7ee0567bc386c">FILTER_REQUEST_CONTEXT</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>typedef struct _NDIS_OID_REQUEST **  <link linkend="group__NPF__include_1ga66fd58eca31e60f0d201a2a48aff2b4c">PFILTER_REQUEST_CONTEXT</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>typedef struct <link linkend="struct__PACKET__OID__DATA">_PACKET_OID_DATA</link>  <link linkend="group__NPF__include_1gaac2a71ec6975f035cd46deecfd64ae34">PACKET_OID_DATA</link><para><emphasis>Structure containing an OID request.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>typedef struct <link linkend="struct__PACKET__OID__DATA">_PACKET_OID_DATA</link> *  <link linkend="group__NPF__include_1gae8459d841eb2e496497aaf9324817499">PPACKET_OID_DATA</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>typedef struct <link linkend="struct__INTERNAL__REQUEST">_INTERNAL_REQUEST</link>  <link linkend="group__NPF__include_1ga0bee4ca4dc129822e19478f88d991a31">INTERNAL_REQUEST</link><para><emphasis>Stores an OID request.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>typedef struct <link linkend="struct__INTERNAL__REQUEST">_INTERNAL_REQUEST</link> *  <link linkend="group__NPF__include_1ga55591a7d14855359ed1e3995f7f025c3">PINTERNAL_REQUEST</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>typedef struct <link linkend="struct__PACKET__RESERVED">_PACKET_RESERVED</link>  <link linkend="group__NPF__include_1ga2225b3cfa793593a1849aa0652846a5c">PACKET_RESERVED</link><para><emphasis>Contains a NDIS packet.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>typedef struct <link linkend="struct__PACKET__RESERVED">_PACKET_RESERVED</link> *  <link linkend="group__NPF__include_1ga375d9973bbbe748c9722e8f546beb10c">PPACKET_RESERVED</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>typedef struct <link linkend="struct__DEVICE__EXTENSION">_DEVICE_EXTENSION</link>  <link linkend="group__NPF__include_1ga5091b7a273db5d38a71df5293eb52ccf">DEVICE_EXTENSION</link><para><emphasis>Port device extension.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>typedef struct <link linkend="struct__DEVICE__EXTENSION">_DEVICE_EXTENSION</link> *  <link linkend="group__NPF__include_1gac8ad25578be589c8352fc4e1a8a99be3">PDEVICE_EXTENSION</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>typedef struct <link linkend="struct____CPU__Private__Data">__CPU_Private_Data</link>  <link linkend="group__NPF__include_1ga996998407e992fbf906e4456d156808c">CpuPrivateData</link><para><emphasis>Kernel buffer of each CPU.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>typedef struct <link linkend="struct__OPEN__INSTANCE">_OPEN_INSTANCE</link>  <link linkend="group__NPF__include_1gafeddf3a08e141d369532061f3f8cd939">OPEN_INSTANCE</link><para><emphasis>Contains the state of a running instance of the NPF driver.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>typedef struct <link linkend="struct__OPEN__INSTANCE">_OPEN_INSTANCE</link> *  <link linkend="group__NPF__include_1gad3b7ff25cfe0e8fd50666782f85e76cb">POPEN_INSTANCE</link></para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title>Variables</title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>NDIS_HANDLE <link linkend="group__NPF__include_1ga9113f37eacce9fba2feb3ad57cc73705">FilterDriverObject</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>ULONG <link linkend="group__NPF__include_1ga980b14c18716a1788990f8e68fed9420">g_NCpu</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct time_conv <link linkend="group__NPF__include_1ga8bd3dab633cae7a1a47c4ddb2705a31b">G_Start_Time</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>FILTER_SET_OPTIONS <link linkend="group__NPF__code_1ga5115bd8dde51e2781e7b4e0399aec26f">NPF_RegisterOptions</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>FILTER_ATTACH <link linkend="group__NPF__code_1gaff02b0a70a0aa85620445b9c197dc5de">NPF_AttachAdapter</link><para><emphasis>Callback for NDIS AttachHandler. Not used by NPF.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>FILTER_DETACH <link linkend="group__NPF__code_1ga6b9046210a2eb5b094f17e0f456ec893">NPF_DetachAdapter</link><para><emphasis>Callback for NDIS DetachHandler.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>DRIVER_UNLOAD <link linkend="group__NPF__code_1ga764f5c22ede74a9311342cd19421f545">NPF_Unload</link><para><emphasis>Function called by the OS when NPF is unloaded.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>FILTER_RESTART <link linkend="group__NPF__code_1ga23d3565bbfb71db9fcdb83bfae29492c">NPF_Restart</link><para><emphasis>Filter restart routine, callback for NDIS RestartHandler.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>FILTER_PAUSE <link linkend="group__NPF__code_1ga95739fd0dc3f0706723f6fa4528972b1">NPF_Pause</link><para><emphasis>Filter pause routine, Callback for NDIS PauseHandler.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>FILTER_OID_REQUEST <link linkend="group__NPF__code_1ga10ee17ea67d95bb3181d15504766af8b">NPF_OidRequest</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>FILTER_CANCEL_OID_REQUEST <link linkend="group__NPF__code_1gacb9e2c3fa9a52b1100a33fa71ee2f375">NPF_CancelOidRequest</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>FILTER_OID_REQUEST_COMPLETE <link linkend="group__NPF__code_1ga19e4d4a1b5137ac74dad1fbd8c1ea43d">NPF_OidRequestComplete</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>FILTER_STATUS <link linkend="group__NPF__code_1gadfce5805f2e2026d08c275bd495cc87a">NPF_Status</link><para><emphasis>Callback for NDIS StatusHandler. Not used by NPF.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>FILTER_DEVICE_PNP_EVENT_NOTIFY <link linkend="group__NPF__code_1gaeae1fa7b69f4374d66377f02aebb7c30">NPF_DevicePnPEventNotify</link><para><emphasis>Device PNP event handler.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>FILTER_NET_PNP_EVENT <link linkend="group__NPF__code_1ga81b05ccf273c2f945fb3f21da2788649">NPF_NetPnPEvent</link><para><emphasis>Net PNP event handler.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>FILTER_SEND_NET_BUFFER_LISTS <link linkend="group__NPF__code_1ga8a224321a819c50b39c65deb6feb2990">NPF_SendEx</link><para><emphasis>Callback for NDIS SendNetBufferListsHandler.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>FILTER_RETURN_NET_BUFFER_LISTS <link linkend="group__NPF__code_1ga7bf507f2ea2c1a99e425d983f522718e">NPF_ReturnEx</link><para><emphasis>Callback for NDIS ReturnNetBufferListsHandler.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>FILTER_SEND_NET_BUFFER_LISTS_COMPLETE <link linkend="group__NPF__code_1gaf574b5a81173554f2c44f197d633c882">NPF_SendCompleteEx</link><para><emphasis>Callback for NDIS SendNetBufferListsCompleteHandler.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>FILTER_RECEIVE_NET_BUFFER_LISTS <link linkend="group__NPF__code_1ga97357217815d777965c6114fde014b4c">NPF_TapEx</link><para><emphasis>Callback for NDIS ReceiveNetBufferListsHandler.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>FILTER_CANCEL_SEND_NET_BUFFER_LISTS <link linkend="group__NPF__code_1ga68e4564ae596b0fb6b947a9485cc4102">NPF_CancelSendNetBufferLists</link><para><emphasis>Callback for NDIS CancelSendNetBufferListsHandler.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>FILTER_SET_MODULE_OPTIONS <link linkend="group__NPF__code_1gaf92ab7626caa4a270cfad07ad97da927">NPF_SetModuleOptions</link><para><emphasis>Callback for NDIS SetFilterModuleOptionsHandler.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>DRIVER_INITIALIZE <link linkend="group__NPF__code_1ga4fdcbea54bcb9f97ab54ae0f41650622">DriverEntry</link><para><emphasis>The initialization routine of the driver.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title>Functions</title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para> <link linkend="group__NPF__include_1ga6259f706c0907d31a1476960233222c6">C_ASSERT</link> (
sizeof(<link linkend="group__NPF__include_1gaac2a71ec6975f035cd46deecfd64ae34">PACKET_OID_DATA</link>) )</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>VOID <link linkend="group__NPF__code_1ga8fcbaebfdbada64f9762e31fa96e9d6a">NPF_FreePackets</link> (
PNET_BUFFER_LIST NetBufferLists)<para><emphasis>Function to free the Net Buffer Lists initiated by ourself.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>ULONG <link linkend="group__NPF__code_1ga4038247452c950134c0cb87609348469">NPF_GetPhysicalMedium</link> (
NDIS_HANDLE FilterModuleContext)<para><emphasis>Get the physical medium of the adapter.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>ULONG <link linkend="group__NPF__code_1ga16173e745bd6a3d0ead21256de38520e">NPF_GetPacketFilter</link> (
NDIS_HANDLE FilterModuleContext)<para><emphasis>Get the packet filter of the adapter.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>NDIS_STATUS <link linkend="group__NPF__code_1ga40afb45f4ad8ac44da6d0b4b80c09568">NPF_SetPacketFilter</link> (
NDIS_HANDLE FilterModuleContext, ULONG PacketFilter)<para><emphasis>Set the packet filter of the adapter.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>NDIS_STATUS <link linkend="group__NPF__code_1gacaf4bc2ac781a1f215a92c930afc3ba6">NPF_DoInternalRequest</link> (
_In_ NDIS_HANDLE FilterModuleContext, _In_ NDIS_REQUEST_TYPE RequestType, _In_ NDIS_OID Oid, _Inout_updates_bytes_to_(InformationBufferLength, *pBytesProcessed) PVOID InformationBuffer, _In_ ULONG InformationBufferLength, _In_opt_ ULONG OutputBufferLength, _In_ ULONG MethodId, _Out_ PULONG pBytesProcessed)<para><emphasis>Utility routine that forms and sends an NDIS_OID_REQUEST to the miniport adapter.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>VOID <link linkend="group__NPF__code_1ga0f4ceafd1a03ffa4999224d381f05069">NPF_InternalRequestComplete</link> (
_In_ NDIS_HANDLE FilterModuleContext, _In_ PNDIS_OID_REQUEST NdisRequest, _In_ NDIS_STATUS Status)<para><emphasis>Self-sent request handler.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>ULONG <link linkend="group__NPF__code_1ga03c8b625d6dbd8c32aa052e75d91faf0">My_NdisGroupMaxProcessorCount</link> (
)<para><emphasis>Returns the maximum number of processors in the machine.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>ULONG <link linkend="group__NPF__code_1gac13d66181916327d6ec6ea241aa92d31">My_KeGetCurrentProcessorNumber</link> (
)<para><emphasis>Returns the processor number of the logical processor that the caller is running on.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>VOID <link linkend="group__NPF__code_1ga583e25304494a20cc26b314f35b4c4a7">NPF_registerLWF</link> (
PNDIS_FILTER_DRIVER_CHARACTERISTICS pFChars, BOOLEAN bWiFiOrNot)<para><emphasis>The initialization routine of the LWF data structure.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>PWCHAR <link linkend="group__NPF__code_1ga4d4285c1178ae2e7aa2ee2e7cbb962fa">getAdaptersList</link> (
)<para><emphasis>Returns the list of the MACs available on the system.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>PKEY_VALUE_PARTIAL_INFORMATION <link linkend="group__NPF__code_1gac9fd20e0896f418bcbe8891cac9264a6">getTcpBindings</link> (
)<para><emphasis>Returns the MACs that bind to TCP/IP.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>ULONG <link linkend="group__NPF__code_1gaea8c5091e715c9fe3861b85eb9df3fa9">NPF_GetRegistryOption_Integer</link> (
PUNICODE_STRING RegistryPath, PUNICODE_STRING RegValueName)<para><emphasis>read Npcap software&apos;s registry, get the option.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>VOID <link linkend="group__NPF__code_1ga3d90362bd8afff10c568dacf8da63497">NPF_GetRegistryOption_String</link> (
)<para><emphasis>read Npcap software&apos;s registry, get the loopback adapter&apos;s device name and then put the name into global variable: g_LoopbackAdapterName. This name will be check in NPF_CreateDevice() function.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>BOOLEAN <link linkend="group__NPF__code_1ga9a0324855f0f3c78f5849141b2b762c1">NPF_CreateDevice</link> (
IN OUT PDRIVER_OBJECT DriverObject, IN PUNICODE_STRING AdapterName, IN PUNICODE_STRING NPF_Prefix, IN BOOLEAN Dot11)<para><emphasis>Creates a device for a given MAC.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para> <link linkend="group__NPF__code_1ga27adfea80e4f27216ea3e26ea4824abc">_Dispatch_type_</link> (
IRP_MJ_CREATE )<para><emphasis>Opens a new instance of the driver.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para> <link linkend="group__NPF__code_1ga8eb569f58457bc951486e6d07dee9d67">_Dispatch_type_</link> (
IRP_MJ_CLEANUP )<para><emphasis>Closes an instance of the driver.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para> <link linkend="group__NPF__code_1ga2db095d0ced7dc5f32deba345ee42456">_Dispatch_type_</link> (
IRP_MJ_CLOSE )<para><emphasis>Closes an instance of the driver.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>VOID <link linkend="group__NPF__code_1gae4ee83bd493a7fd3d57a43ace557f5ca">NPF_TapExForEachOpen</link> (
IN <link linkend="group__NPF__include_1gad3b7ff25cfe0e8fd50666782f85e76cb">POPEN_INSTANCE</link> Open, IN PNET_BUFFER_LIST pNetBufferLists)<para><emphasis>Callback invoked by NPF_TapEx() when a packet arrives from the network.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para> <link linkend="group__NPF__code_1ga574f32dfea14937d984bfe6cea990661">_Dispatch_type_</link> (
IRP_MJ_DEVICE_CONTROL )<para><emphasis>Handles the IOCTL calls.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para> <link linkend="group__NPF__code_1ga6ce38ed96776a52a17ab033de5b6d0df">_Dispatch_type_</link> (
IRP_MJ_WRITE )<para><emphasis>Writes a raw packet to the network.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>INT <link linkend="group__NPF__code_1ga9a97dd25ae757da4bfed3723a4eb4bce">NPF_BufferedWrite</link> (
IN PIRP Irp, IN PCHAR UserBuff, IN ULONG UserBuffSize, BOOLEAN sync)<para><emphasis>Writes a buffer of raw packets to the network.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>VOID <link linkend="group__NPF__code_1ga8861b474efcb6578c9fe2075ff3e6aef">NPF_WaitEndOfBufferedWrite</link> (
<link linkend="group__NPF__include_1gad3b7ff25cfe0e8fd50666782f85e76cb">POPEN_INSTANCE</link> Open)<para><emphasis>Waits the completion of all the sends performed by NPF_BufferedWrite.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>VOID <link linkend="group__NPF__code_1ga4290c442943ae36cf616862137ca0a87">NPF_SendCompleteExForEachOpen</link> (
IN <link linkend="group__NPF__include_1gad3b7ff25cfe0e8fd50666782f85e76cb">POPEN_INSTANCE</link> Open, BOOLEAN FreeBufAfterWrite)<para><emphasis>Ends a send operation.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>VOID <link linkend="group__NPF__code_1gae116b69870512a8b9f12c2e246d043e5">NPF_StatusEx</link> (
IN NDIS_HANDLE ProtocolBindingContext, IN PNDIS_STATUS_INDICATION StatusIndication)<para><emphasis>Callback for NDIS StatusHandler. Not used by NPF.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>VOID <link linkend="group__NPF__code_1ga70f97109adcd6de8b157534e5ecf2e56">NPF_StatusComplete</link> (
IN NDIS_HANDLE ProtocolBindingContext)<para><emphasis>Callback for NDIS StatusCompleteHandler. Not used by NPF.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para> <link linkend="group__NPF__code_1ga6330e925342da5060d8968dbbecfabdc">_Dispatch_type_</link> (
IRP_MJ_READ )<para><emphasis>Function that serves the user&apos;s reads.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="group__NPF__code_1gad04266456ecaa437122eee8dd3eddeca">NPF_AddToOpenArray</link> (
<link linkend="group__NPF__include_1gad3b7ff25cfe0e8fd50666782f85e76cb">POPEN_INSTANCE</link> Open)<para><emphasis>Add the open context to the global open array.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="group__NPF__code_1ga200a4e395f43a9b0a6769986dd0d9563">NPF_AddToGroupOpenArray</link> (
<link linkend="group__NPF__include_1gad3b7ff25cfe0e8fd50666782f85e76cb">POPEN_INSTANCE</link> Open, <link linkend="group__NPF__include_1gad3b7ff25cfe0e8fd50666782f85e76cb">POPEN_INSTANCE</link> GroupHead)<para><emphasis>Add the open context to the group open array of a head adapter.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="group__NPF__code_1gabbdcba53431b4b034a2865a357fe7139">NPF_RemoveFromOpenArray</link> (
<link linkend="group__NPF__include_1gad3b7ff25cfe0e8fd50666782f85e76cb">POPEN_INSTANCE</link> Open)<para><emphasis>Remove the open context from the global open array.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="group__NPF__code_1gacd6b083f1069a6ace93f867e063547d7">NPF_RemoveFromGroupOpenArray</link> (
<link linkend="group__NPF__include_1gad3b7ff25cfe0e8fd50666782f85e76cb">POPEN_INSTANCE</link> Open)<para><emphasis>Remove the open context from the group open array of a head adapter.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>BOOLEAN <link linkend="group__NPF__code_1ga9239d79ad62d1d56393963d076b42949">NPF_EqualAdapterName</link> (
PNDIS_STRING s1, PNDIS_STRING s2)<para><emphasis>Compare two NDIS strings.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="group__NPF__include_1gad3b7ff25cfe0e8fd50666782f85e76cb">POPEN_INSTANCE</link> <link linkend="group__NPF__code_1ga2c7bf9f627c395096f806bad0ebd41cf">NPF_GetOpenByAdapterName</link> (
PNDIS_STRING pAdapterName, BOOLEAN Dot11)<para><emphasis>Get a copy of open instance from the global array.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="group__NPF__include_1gad3b7ff25cfe0e8fd50666782f85e76cb">POPEN_INSTANCE</link> <link linkend="group__NPF__code_1ga759d14a6f8a32feaf146505024f77cfa">NPF_DuplicateOpenObject</link> (
<link linkend="group__NPF__include_1gad3b7ff25cfe0e8fd50666782f85e76cb">POPEN_INSTANCE</link> OriginalOpen, <link linkend="group__NPF__include_1gac8ad25578be589c8352fc4e1a8a99be3">PDEVICE_EXTENSION</link> DeviceExtension)<para><emphasis>Get a copy of open instance from the global array.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="group__NPF__include_1gad3b7ff25cfe0e8fd50666782f85e76cb">POPEN_INSTANCE</link> <link linkend="group__NPF__code_1ga9b229409688200ac6e9b1ef66e32a3ed">NPF_CreateOpenObject</link> (
PNDIS_STRING AdapterName, UINT SelectedIndex, <link linkend="group__NPF__include_1gac8ad25578be589c8352fc4e1a8a99be3">PDEVICE_EXTENSION</link> DeviceExtension)<para><emphasis>Create a open instance.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>NTSTATUS <link linkend="group__NPF__code_1gae3d1118c72b474fe214517a65afdfe09">NPF_OpenDumpFile</link> (
<link linkend="group__NPF__include_1gad3b7ff25cfe0e8fd50666782f85e76cb">POPEN_INSTANCE</link> Open, PUNICODE_STRING fileName, BOOLEAN append)<para><emphasis>Creates the file that will receive the packets when the driver is in dump mode.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>NTSTATUS <link linkend="group__NPF__code_1gaeffce124cbc3e3ae09bd7a6d10367cbb">NPF_StartDump</link> (
<link linkend="group__NPF__include_1gad3b7ff25cfe0e8fd50666782f85e76cb">POPEN_INSTANCE</link> Open)<para><emphasis>Starts dump to file.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>VOID <link linkend="group__NPF__code_1ga1566082cef91cf79ba4a855e3f44ede9">NPF_DumpThread</link> (
PVOID Open)<para><emphasis>The dump thread.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>NTSTATUS <link linkend="group__NPF__code_1gafcdcf5a4d9bfb8fbdb179963d4c789bd">NPF_SaveCurrentBuffer</link> (
<link linkend="group__NPF__include_1gad3b7ff25cfe0e8fd50666782f85e76cb">POPEN_INSTANCE</link> Open)<para><emphasis>Saves the content of the packet buffer to the file associated with current instance.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>VOID <link linkend="group__NPF__code_1ga57b9ee7752f00c8858bda8ca060a033b">NPF_WriteDumpFile</link> (
PFILE_OBJECT FileObject, PLARGE_INTEGER Offset, ULONG Length, PMDL Mdl, PIO_STATUS_BLOCK IoStatusBlock)<para><emphasis>Writes a block of packets on the dump file.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>NTSTATUS <link linkend="group__NPF__code_1gac911742b9f71c12c77452614db14c4a1">NPF_CloseDumpFile</link> (
<link linkend="group__NPF__include_1gad3b7ff25cfe0e8fd50666782f85e76cb">POPEN_INSTANCE</link> Open)<para><emphasis>Closes the dump file associated with an instance of the driver.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>BOOLEAN <link linkend="group__NPF__code_1ga64dab96bfced5d22cc55a42fc6339833">NPF_StartUsingBinding</link> (
IN <link linkend="group__NPF__include_1gad3b7ff25cfe0e8fd50666782f85e76cb">POPEN_INSTANCE</link> pOpen)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>VOID <link linkend="group__NPF__code_1gacd54077d4c2d9186486d3504523ba4f0">NPF_StopUsingBinding</link> (
IN <link linkend="group__NPF__include_1gad3b7ff25cfe0e8fd50666782f85e76cb">POPEN_INSTANCE</link> pOpen)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>VOID <link linkend="group__NPF__code_1ga76d4e48415cea8e0e65ba93d7355b89f">NPF_CloseBinding</link> (
IN <link linkend="group__NPF__include_1gad3b7ff25cfe0e8fd50666782f85e76cb">POPEN_INSTANCE</link> pOpen)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>BOOLEAN <link linkend="group__NPF__code_1ga504e61b1229a9a604080fc8607b24084">NPF_StartUsingOpenInstance</link> (
IN <link linkend="group__NPF__include_1gad3b7ff25cfe0e8fd50666782f85e76cb">POPEN_INSTANCE</link> pOpen)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>VOID <link linkend="group__NPF__code_1ga6ceb77291c077b05efd3b588a6a30867">NPF_StopUsingOpenInstance</link> (
IN <link linkend="group__NPF__include_1gad3b7ff25cfe0e8fd50666782f85e76cb">POPEN_INSTANCE</link> pOpen)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>VOID <link linkend="group__NPF__code_1ga99878d91732973e7b4020d8e42b4cf32">NPF_CloseOpenInstance</link> (
IN <link linkend="group__NPF__include_1gad3b7ff25cfe0e8fd50666782f85e76cb">POPEN_INSTANCE</link> pOpen)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>NTSTATUS <link linkend="group__NPF__code_1ga208c887c5d9e995e59a8f5a39ed191c7">NPF_GetDeviceMTU</link> (
IN <link linkend="group__NPF__include_1gad3b7ff25cfe0e8fd50666782f85e76cb">POPEN_INSTANCE</link> pOpen, OUT PUINT pMtu)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>UINT <link linkend="group__NPF__code_1gadd6737f745e21b37b8613b489a96687d">GetBuffOccupation</link> (
<link linkend="group__NPF__include_1gad3b7ff25cfe0e8fd50666782f85e76cb">POPEN_INSTANCE</link> Open)<para><emphasis>Returns the amount of bytes present in the packet buffer.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>VOID <link linkend="group__NPF__code_1gae4089cbcd9d643328f7ac79200049e84">NPF_ResetBufferContents</link> (
<link linkend="group__NPF__include_1gad3b7ff25cfe0e8fd50666782f85e76cb">POPEN_INSTANCE</link> Open)</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
    <simplesect>
        <title>Detailed Description</title>
    <para>Definition in file Packet.h</para>
    </simplesect>
</section>
